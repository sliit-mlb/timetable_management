/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Locations;

import Common.DBConnection;
import Common.IndexPage;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ishma
 */
public class MainFrm extends javax.swing.JFrame {

    /**
     * Creates new form MainFrm
     */
    public MainFrm() {
        initComponents();
        this.setLocationRelativeTo(null);
        pnChart.setLayout(new java.awt.BorderLayout());
    }

    Connection con;
    
    private DefaultCategoryDataset createDataset() {
        // same dataset for line chart and bar chart
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        PreparedStatement stmt;
        ResultSet rs;
        
        try{
            con = DBConnection.getDBConnection();
            
            stmt = con.prepareStatement("SELECT offeredYear,COUNT(subjectCode) AS subjectCount FROM subjects GROUP BY offeredYear");
            rs = stmt.executeQuery();
            
            while(rs.next()){
                dataset.addValue(Integer.parseInt(rs.getString("subjectCount")),"subjects",rs.getString("offeredYear"));
            }
        }catch(Exception e){
            e.printStackTrace();
        }

        return dataset;
    }
    
    private DefaultCategoryDataset createDatasetForLineChart() {
        // same dataset for line chart and bar chart
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        PreparedStatement stmt;
        ResultSet rs;
        
        try{
            con = DBConnection.getDBConnection();
            
            stmt = con.prepareStatement("SELECT programme,COUNT(groupid) AS stGroupCount FROM studentgroup GROUP BY programme");
            rs = stmt.executeQuery();
            
            while(rs.next()){
                dataset.addValue(Integer.parseInt(rs.getString("stGroupCount")),"subjects",rs.getString("programme"));
            }
        }catch(Exception e){
            e.printStackTrace();
        }

        return dataset;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnChart = new javax.swing.JPanel();
        btnLineChart = new javax.swing.JButton();
        btnBarChart = new javax.swing.JButton();
        btn3DPie = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnChart.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        javax.swing.GroupLayout pnChartLayout = new javax.swing.GroupLayout(pnChart);
        pnChart.setLayout(pnChartLayout);
        pnChartLayout.setHorizontalGroup(
            pnChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnChartLayout.setVerticalGroup(
            pnChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 337, Short.MAX_VALUE)
        );

        btnLineChart.setBackground(new java.awt.Color(204, 0, 255));
        btnLineChart.setText("Line Chart");
        btnLineChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineChartActionPerformed(evt);
            }
        });

        btnBarChart.setBackground(new java.awt.Color(153, 255, 153));
        btnBarChart.setText("Bar Chart");
        btnBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarChartActionPerformed(evt);
            }
        });

        btn3DPie.setBackground(new java.awt.Color(255, 102, 255));
        btn3DPie.setText("3D Pie Chart");
        btn3DPie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3DPieActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Back ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                        .addComponent(btn3DPie)
                        .addGap(18, 18, 18)
                        .addComponent(btnBarChart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLineChart)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLineChart)
                    .addComponent(btnBarChart)
                    .addComponent(btn3DPie)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLineChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineChartActionPerformed
       // create line chart
        JFreeChart lineChart = ChartFactory.createLineChart(
                "Number of student group vs. programme",
                "programme", "Number of student group",
                createDatasetForLineChart(),
                PlotOrientation.VERTICAL,
                true, true, false);
        // set color
        CategoryPlot plot = (CategoryPlot) lineChart.getPlot();
        plot.getRenderer().setSeriesPaint(0, Color.BLUE);
        // create chart panel the add it to swing panel in  jframe
        ChartPanel chartPanel = new ChartPanel(lineChart);
        pnChart.removeAll();    // clear panel before add new chart
        pnChart.add(chartPanel, BorderLayout.CENTER);
        pnChart.validate();       // refresh panel to display new chart
    }//GEN-LAST:event_btnLineChartActionPerformed

    private void btnBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarChartActionPerformed
        // create bar chart 
        JFreeChart barChart = ChartFactory.createBarChart(
                "subject vs. offered year",
                "Years", "Number of subjects",
                createDataset(),
                PlotOrientation.VERTICAL,
                true, true, false);
        // set color
        CategoryPlot plot = (CategoryPlot) barChart.getPlot();
        plot.getRenderer().setSeriesPaint(0, Color.BLUE);
        // create chart panel the add it to swing panel in  jframe
        ChartPanel chartPanel = new ChartPanel(barChart);
        pnChart.removeAll();        // clear panel before add new chart
        pnChart.add(chartPanel, BorderLayout.CENTER);
        pnChart.validate();          // refresh panel to display new chart
    }//GEN-LAST:event_btnBarChartActionPerformed

    private void btn3DPieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3DPieActionPerformed
        // create dataset for pie chart
        DefaultPieDataset dataset = new DefaultPieDataset();
        
        PreparedStatement stmt;
        ResultSet rs;
        
        try{
            con = DBConnection.getDBConnection();
            
            stmt = con.prepareStatement("SELECT department,COUNT(empID) AS lecCount FROM lecturers GROUP BY department");
            rs = stmt.executeQuery();
            
            while(rs.next()){
                dataset.setValue(rs.getString("department"), Integer.parseInt(rs.getString("lecCount")));
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        
        // create pir chart
        JFreeChart chart = ChartFactory.createPieChart3D(
                "Lecturer level statistics", // chart title                   
                dataset, // data 
                true, // include legend                   
                true,
                false);
        // set chart properties
        final PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setStartAngle(270);
        plot.setForegroundAlpha(0.60f);
        plot.setInteriorGap(0.02);
        // create chart panel the add it to swing panel in  jframe
        ChartPanel chartPanel = new ChartPanel(chart);
        pnChart.removeAll();        // clear panel before add new chart
        pnChart.add(chartPanel, BorderLayout.CENTER);
        pnChart.validate();         // refresh panel to display new chart
    }//GEN-LAST:event_btn3DPieActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        new IndexPage().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn3DPie;
    private javax.swing.JButton btnBarChart;
    private javax.swing.JButton btnLineChart;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel pnChart;
    // End of variables declaration//GEN-END:variables
}
