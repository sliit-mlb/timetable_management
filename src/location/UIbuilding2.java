/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package location;

import Common.DBConnection;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ishma
 */
public class UIbuilding2 extends javax.swing.JFrame {

    /**
     * Creates new form UIbuilding2
     */
    Connection con = null;
    Statement st;
    ArrayList<building> buildings = new ArrayList<>();

    public UIbuilding2() {
        initComponents();
        fetch();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        departmenttxt = new javax.swing.JComboBox<>();
        facultytxt = new javax.swing.JComboBox<>();
        hm = new javax.swing.JSpinner();
        floortxt = new javax.swing.JSpinner();
        hl = new javax.swing.JSpinner();
        ll = new javax.swing.JSpinner();
        hs = new javax.swing.JSpinner();
        ls = new javax.swing.JSpinner();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        addbuild = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        buildtable = new javax.swing.JTable();

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setText("(5) NUMBER OF LECTURE HALLS  :- ");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 51));

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setText("BUILDING - LOCATION");

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("(2) DEPARTMENT  :- ");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("(3) FACULTY :- ");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("(4) FLOORS :- ");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText("(1) BUILDING NAME :- ");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 153));
        jLabel6.setText("MEDIUM (100 - 50 MAX)");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 153));
        jLabel8.setText("(5) NUMBER OF LABS  :- ");

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 153, 153));
        jLabel9.setText("SMALL (LESS THAN 50)");

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 153));
        jLabel10.setText("LARGE (100 - 50 MAX)");

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 153, 153));
        jLabel11.setText("(5) NUMBER OF LECTURE HALLS  :- ");

        jLabel12.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 153, 153));
        jLabel12.setText("LARGE (150 - 100 MAX)");

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 153, 153));
        jLabel13.setText("SMALL (LESS THAN 50)");

        nametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nametxtActionPerformed(evt);
            }
        });

        departmenttxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT ", "COMPUTING", "LEGAL", "ENGINEERING", "ARCHITECTURE", "SCIENCE" }));

        facultytxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "IT ", "SOFTWARE ENGINEERING", "CYBER SECURITY", "BIO MEDICAL", "NURSING", "LAW", " " }));

        floortxt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                floortxtPropertyChange(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(51, 255, 255));
        updatebtn.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(51, 51, 51));
        updatebtn.setText("UPDATE");
        updatebtn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 153)));
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(51, 255, 255));
        deletebtn.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(51, 51, 51));
        deletebtn.setText("DELETE");
        deletebtn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 204)));
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        addbuild.setBackground(new java.awt.Color(51, 255, 255));
        addbuild.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        addbuild.setForeground(new java.awt.Color(51, 51, 51));
        addbuild.setText("ADD");
        addbuild.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 204)));
        addbuild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuildActionPerformed(evt);
            }
        });

        buildtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "name", "department", "faculty", "floors", "h1", "h2", "h3", "l1", "l2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        buildtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buildtableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(buildtable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ll, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hs, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(ls, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(addbuild, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(hl, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(hm, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel8))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(floortxt, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(facultytxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nametxt)
                                    .addComponent(departmenttxt, 0, 213, Short.MAX_VALUE))))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(178, 178, 178)
                        .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nametxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(departmenttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(facultytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(floortxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(addbuild, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new newsubhomepage().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void nametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nametxtActionPerformed

    private void addbuildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuildActionPerformed
        //text field

        String name = nametxt.getText().trim();

        //drop down 			
        String dep = departmenttxt.getSelectedItem().toString().trim();
        String fac = facultytxt.getSelectedItem().toString().trim();

        //spinner - floor
        Integer floor = (Integer) floortxt.getValue();

        //spinner - lecture hall
        Integer hlval = (Integer) hl.getValue();
        Integer hmval = (Integer) hm.getValue();
        Integer hsval = (Integer) hs.getValue();

        //spinner - labs
        Integer llval = (Integer) ll.getValue();
        Integer lsval = (Integer) ls.getValue();

        if (!name.isEmpty() && !dep.isEmpty() && !fac.isEmpty() && floor != 0 && hlval > 0 && hmval > 0
                && hsval > 0 && llval > 0 && lsval > 0) {
            try {
                if (con == null) {
                    con = DBConnection.getDBConnection();
                }
                String sql = "select * from building where buildingName='" + name + "'";
                st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                if (!rs.next()) {

                    save(name, dep, fac, floor, hlval, hmval, hsval, llval, lsval);
                    DefaultTableModel model = (DefaultTableModel) buildtable.getModel();

                    Vector vv = new Vector();
                    vv.add(name);
                    vv.add(dep);
                    vv.add(fac);
                    vv.add(floor);
                    vv.add(hlval);
                    vv.add(hmval);
                    vv.add(hsval);
                    vv.add(llval);
                    vv.add(lsval);

                    model.addRow(vv);

                    /* Object[] row = new Object[10];
                    row[0] = name;
                    row[1] = dep;
                    row[2] = fac;
                    row[3] = floor;
                    row[4] = hlval;
                    row[5] = hmval;
                    row[6] = hsval;
                    row[7] = llval;
                    row[8] = lsval;
                    
                    model.addRow(row);
                     */
                } else {
                    alert("Please provide a different name number", "Similar name used");
                }

                clear();
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
//Logger.getLogger(UIbuilding2.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    //con.close();
                    st.close();
                } catch (SQLException ex) {
                    Logger.getLogger(UIbuilding2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } //        else if (!id.matches("^[0-9]{8}$")) {
        //            alert("please provide a valid id number", "Wrong id");
        //        } 
        else {
            alert("please fill in all the details");
        }


    }//GEN-LAST:event_addbuildActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        int i = buildtable.getSelectedRow();
        if (i >= 0) {
            int option = JOptionPane.showConfirmDialog(rootPane,
                    "Are you sure you want to Delete?", "Delete confirmation", JOptionPane.YES_NO_OPTION);
            if (option == 0) {
                TableModel model = buildtable.getModel();

                String buildingname = model.getValueAt(i, 0).toString();
                if (buildtable.getSelectedRows().length == 1) {
                    delete(buildingname);
                    DefaultTableModel model1 = (DefaultTableModel) buildtable.getModel();
                    model1.setRowCount(0);
                    fetch();
                    clear();
                }
            }
        } else {
            alert("Please select a row to delete");
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        //text field

        String name = nametxt.getText().trim();

        //drop down 			
        String dep = departmenttxt.getSelectedItem().toString().trim();
        String fac = facultytxt.getSelectedItem().toString().trim();

        //spinner - floor
        Integer floor = (Integer) floortxt.getValue();

        //spinner - lecture hall
        Integer hlval = (Integer) hl.getValue();
        Integer hmval = (Integer) hm.getValue();
        Integer hsval = (Integer) hs.getValue();

        //spinner - labs
        Integer llval = (Integer) ll.getValue();
        Integer lsval = (Integer) ls.getValue();

        if (!name.isEmpty() && !dep.isEmpty() && !fac.isEmpty() && floor != 0 && hlval > 0 && hmval > 0
                && hsval > 0 && llval > 0 && lsval > 0) {
            try {
                if (con == null) {
                    con = DBConnection.getDBConnection();
                }

                String sql = "select * from building where buildingName='" + name + "'";
                Statement st1 = con.createStatement();
                ResultSet rs = st1.executeQuery(sql);
                if (rs.next()) {
                    update(name, dep, fac, floor, hlval, hmval, hsval, llval, lsval);
                    DefaultTableModel model = (DefaultTableModel) buildtable.getModel();
                    model.setRowCount(0);
                    fetch();
                    alert("Update was successful");

                } else {
                    alert("There is no such student", "Update error");
                    clear();
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(UIbuilding2.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            alert("There is nothing to update :(", "No row selected");
        }

    }//GEN-LAST:event_updatebtnActionPerformed

    private void floortxtPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_floortxtPropertyChange
        // TODO add your handling code here:


    }//GEN-LAST:event_floortxtPropertyChange

    private void buildtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buildtableMouseClicked

        int i = buildtable.getSelectedRow();
        TableModel model = buildtable.getModel();

        nametxt.setText(model.getValueAt(i, 0).toString());
        departmenttxt.setSelectedItem(model.getValueAt(i, 1).toString());
        facultytxt.setSelectedItem(model.getValueAt(i, 2).toString());
        floortxt.setValue(model.getValueAt(i, 3));
        hl.setValue(model.getValueAt(i, 4));
        hm.setValue(model.getValueAt(i, 5));
        hs.setValue(model.getValueAt(i, 6));
        ll.setValue(model.getValueAt(i, 7));
        ls.setValue(model.getValueAt(i, 8));

    }//GEN-LAST:event_buildtableMouseClicked
    //method to show an info alert
    public void alert(String msg) {
        JOptionPane.showMessageDialog(rootPane, msg);
    }

    //method to show an error alert
    public void alert(String msg, String title) {
        JOptionPane.showMessageDialog(rootPane, msg, title, JOptionPane.ERROR_MESSAGE);
    }

    //delete details in the db
    public void delete(String buildingname) {
        try {
            if (con == null) {
                con = DBConnection.getDBConnection();
            }

            String sql = "DELETE FROM `building` WHERE buildingName='" + buildingname + "'";
            Statement st2 = con.createStatement();
            st2.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UIbuilding2.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fetch();
    }

    //update the db
    public void update(String buildingname, String department, String faculty, int floors, int l_hall, int m_hall, int s_hall, int l_lab, int s_lab) {
        try {

            if (con == null) {
                con = DBConnection.getDBConnection();
            }

            String sql = "UPDATE building SET buildingName='" + buildingname + "',Department='" + department + "',Faculty='" + faculty + "',Floors='" + floors + "',H_Large='" + l_hall + "',H_Medium='" + m_hall + "',H_Small='" + s_hall + "',L_Large='" + l_lab + "',L_Small='" + s_lab + "' WHERE buildingName='" + buildingname + "'";
            Statement st3 = con.createStatement();
            st3.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UIbuilding2.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fetch();
    }

    //method to save building to the db
    public void save(String buildingname, String department, String faculty, int floors, int l_hall, int m_hall, int s_hall, int l_lab, int s_lab) {
        try {
            if (con == null) {
                con = DBConnection.getDBConnection();
            }

            String sql = "INSERT INTO `building`(`buildingName`, `Department`, `Faculty` , `Floors` , `H_Large` ,`H_Medium` ,`H_Small`,`L_Large` ,`L_Small`) "
                    + "VALUES ('" + buildingname + "','" + department + "','" + faculty + "','" + floors + "','" + l_hall + "','" + m_hall + "','" + s_hall + "','" + l_lab + "','" + s_lab + "')";
            Statement st4 = con.createStatement();
            st4.execute(sql);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UIbuilding2.class.getName()).log(Level.SEVERE, null, ex);
        }
//        fetch();
    }

    //method to clear the txt fields
    private void clear() {
        nametxt.setText("");
        departmenttxt.setSelectedItem("A");
        facultytxt.setSelectedItem("L");
        floortxt.setValue(0);
        hl.setValue(0);
        hm.setValue(0);
        hs.setValue(0);
        ll.setValue(0);
        ls.setValue(0);

    }

    //fetch 
    private void fetch() {
        buildings.clear();

        try {
            if (con == null) {
                con = DBConnection.getDBConnection();
            }

            DefaultTableModel dtm = (DefaultTableModel) buildtable.getModel();
            dtm.setRowCount(0);

            String sql = "select * from building";
            Statement st5 = con.createStatement();
            ResultSet rs = st5.executeQuery(sql);

            while (rs.next()) {
                Vector vv = new Vector();

                String gette = rs.getString("buildingName");
                String gette2 = rs.getString("Department");
                String gette3 = rs.getString("Faculty");
                int gette4 = rs.getInt("Floors");
                int gette5 = rs.getInt("H_Large");
                int gette6 = rs.getInt("H_Medium");
                int gette7 = rs.getInt("H_Small");
                int gette8 = rs.getInt("L_Large");
                int gette9 = rs.getInt("L_Small");

                vv.add(gette);
                vv.add(gette2);
                vv.add(gette3);
                vv.add(gette4);
                vv.add(gette5);
                vv.add(gette6);
                vv.add(gette7);
                vv.add(gette8);
                vv.add(gette9);

                dtm.addRow(vv);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        /*  while (rs.next()) {
                building build = new building(rs.getString("buildingname"), rs.getString("department"), rs.getString("faculty"), rs.getInt("floors"), rs.getInt("l_hall"), rs.getInt("m_hall"), rs.getInt("s_hall"), rs.getInt("l_lab"), rs.getInt("s_lab"));
                buildings.add(build);
            }
            DefaultTableModel model = (DefaultTableModel) buildtable.getModel();
            for (building build : buildings) {

                Object[] row = new Object[10];
                row[0] = build.getname();
                row[1] = build.getdep();
                row[2] = build.getfac();
                row[3] = build.getfloors();
                row[4] = build.getlhall();
                row[5] = build.getmhall();
                row[6] = build.getshall();
                row[7] = build.getllab();
                row[8] = build.getslab();

                model.addRow(row);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(UIbuilding2.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIbuilding2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIbuilding2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIbuilding2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIbuilding2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UIbuilding2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbuild;
    private javax.swing.JTable buildtable;
    private javax.swing.JButton deletebtn;
    private javax.swing.JComboBox<String> departmenttxt;
    private javax.swing.JComboBox<String> facultytxt;
    private javax.swing.JSpinner floortxt;
    private javax.swing.JSpinner hl;
    private javax.swing.JSpinner hm;
    private javax.swing.JSpinner hs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner ll;
    private javax.swing.JSpinner ls;
    private javax.swing.JTextField nametxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
